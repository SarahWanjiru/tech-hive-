{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Tech Hive E-commerce application using Go Fiber",
        "title": "Tech Hive E-commerce",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "localhost:9999",
    "basePath": "/",
    "paths": {
        "/v1/api/authentication": {
            "post": {
                "description": "authenticate user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authenticate user"
                ],
                "summary": "authenticate user",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/cart": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get the current user's shopping cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Get user's cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Remove all items from the user's shopping cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Clear cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/cart/items": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Add a product to the user's shopping cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to cart",
                "parameters": [
                    {
                        "description": "Add to cart request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddToCartModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/cart/items/{id}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the quantity of an item in the user's cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Update cart item quantity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update cart item request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCartItemModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Remove an item from the user's shopping cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/mpesa/callback": {
            "post": {
                "description": "Process M-Pesa payment callback (webhook)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "M-Pesa"
                ],
                "summary": "Process M-Pesa callback",
                "parameters": [
                    {
                        "description": "M-Pesa callback request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MpesaCallbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/mpesa/stkpush": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Initiate M-Pesa payment for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "M-Pesa"
                ],
                "summary": "Initiate M-Pesa STK Push",
                "parameters": [
                    {
                        "description": "M-Pesa payment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MpesaPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/orders": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all orders for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get user's orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new order from the user's cart items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create new order from cart",
                "parameters": [
                    {
                        "description": "Create order request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateOrderModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/orders/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get a specific order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Cancel a pending order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/orders/{id}/status": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the status of an order (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update order status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateOrderStatusModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/product": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all exists products.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get all exists products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "create product.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "create product",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProductCreateOrUpdateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/product/search": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Search products with filters and pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "search products with filters and pagination",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProductSearchModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/product/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get one exists product.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get one exists product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "update one exists product.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "update one exists product",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProductCreateOrUpdateModel"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "delete one exists product.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "delete one exists product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/seed/all": {
            "post": {
                "description": "Create all sample data (users and products) for testing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seed"
                ],
                "summary": "Seed all sample data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/seed/products": {
            "post": {
                "description": "Create sample products for testing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seed"
                ],
                "summary": "Seed sample products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/seed/users": {
            "post": {
                "description": "Create sample users for testing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seed"
                ],
                "summary": "Seed sample users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/transaction": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get all exists transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "get all exists transaction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "create transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "create transaction",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionCreateUpdateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/transaction-detail/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get one exists transaction detail.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Detail"
                ],
                "summary": "get one exists transaction detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Detail Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/transaction/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get one exists transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "get one exists transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "delete one exists transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "delete one exists transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/users": {
            "post": {
                "description": "register new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register user"
                ],
                "summary": "register new user",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserRegistrationModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.GeneralResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AddToCartModel": {
            "type": "object",
            "required": [
                "product_id",
                "quantity"
            ],
            "properties": {
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "model.CreateOrderModel": {
            "type": "object",
            "required": [
                "cart_id",
                "shipping_address"
            ],
            "properties": {
                "cart_id": {
                    "type": "integer"
                },
                "shipping_address": {
                    "type": "string"
                }
            }
        },
        "model.GeneralResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "model.MpesaCallbackItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.MpesaCallbackMetadata": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MpesaCallbackItem"
                    }
                }
            }
        },
        "model.MpesaCallbackRequest": {
            "type": "object",
            "properties": {
                "callback_metadata": {
                    "$ref": "#/definitions/model.MpesaCallbackMetadata"
                },
                "checkout_request_id": {
                    "type": "string"
                },
                "merchant_request_id": {
                    "type": "string"
                },
                "result_code": {
                    "type": "integer"
                },
                "result_desc": {
                    "type": "string"
                }
            }
        },
        "model.MpesaPaymentRequest": {
            "type": "object",
            "required": [
                "amount",
                "order_id",
                "phone_number"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 1,
                    "example": 1000
                },
                "order_id": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string",
                    "example": "254712345678"
                }
            }
        },
        "model.ProductCreateOrUpdateModel": {
            "type": "object",
            "required": [
                "name",
                "price",
                "stock"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "model.ProductModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "model.ProductSearchModel": {
            "type": "object",
            "properties": {
                "in_stock": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "sort_by": {
                    "description": "name, price, created_at",
                    "type": "string"
                },
                "sort_order": {
                    "description": "asc, desc",
                    "type": "string"
                }
            }
        },
        "model.TransactionCreateUpdateModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "total_price": {
                    "type": "integer"
                },
                "transaction_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionDetailCreateUpdateModel"
                    }
                }
            }
        },
        "model.TransactionDetailCreateUpdateModel": {
            "type": "object",
            "required": [
                "price",
                "product_id",
                "quantity",
                "sub_total_price"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "product": {
                    "$ref": "#/definitions/model.ProductModel"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "sub_total_price": {
                    "type": "integer"
                }
            }
        },
        "model.UpdateCartItemModel": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "model.UpdateOrderStatusModel": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "confirmed",
                        "processing",
                        "shipped",
                        "delivered",
                        "cancelled"
                    ]
                }
            }
        },
        "model.UserModel": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "model.UserRegistrationModel": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 150
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "customer",
                        "admin"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "Authorization For JWT",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}